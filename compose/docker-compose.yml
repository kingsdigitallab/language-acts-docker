name: 'languageacts_openstack'

services:
  nginx-proxy:
    image: nginxproxy/nginx-proxy:1.4
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro

  nginx:
    build:
      context: ..
      dockerfile: ./compose/production/nginx/Dockerfile
    restart: unless-stopped
    expose:
      - "8001"
    volumes:
      - ../volumes/django/static:/usr/share/nginx/static:ro
      - ../volumes/django/media:/usr/share/nginx/media:ro
    environment:
      VIRTUAL_HOST: ${DJANGO_ALLOWED_HOSTS}
      VIRTUAL_PATH: "~^/(media/|static/|redist/|robots.txt)"
      VIRTUAL_PROTO: http
      VIRTUAL_PORT: 8001

  db:
    #    build:
    #      context: ../
    #      dockerfile: ./compose/local/postgres/Dockerfile
    image: postgres:12.3
    volumes:
      - ../volumes/local_postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    expose:
      - "5432"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'" ]
      timeout: 10s
      interval: 5s
      retries: 10

  elasticsearch:
    image: elasticsearch:7.10.1
    #volumes:
    #  - ../volumes/elasticsearch/data:/usr/share/elasticsearch/data
    env_file:
      - .env
    expose:
      - "9200"
      - "9300"
    restart: unless-stopped

  django:
    build:
      context: ../
      dockerfile: ./compose/production/django/Dockerfile
    command: /start
    depends_on:
      elasticsearch:
        condition: service_started
      db:
        condition: service_healthy
    env_file:
      - .env
    restart: unless-stopped
    volumes:
      - ../volumes/django/static:/app/static
      - ../volumes/django/media:/app/language_acts/media
    ports:
      - "8000:8000"
    environment:
      VIRTUAL_HOST: ${DJANGO_ALLOWED_HOSTS}
      VIRTUAL_PATH: "/"
      VIRTUAL_PROTO: http
      VIRTUAL_PORT: 8000


