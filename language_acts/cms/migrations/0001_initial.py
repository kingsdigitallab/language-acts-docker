# Generated by Django 2.2.10 on 2020-07-31 16:15

from django.db import migrations, models
import django.db.models.deletion
import language_acts.cms.models.pages
import language_acts.cms.models.streamfield
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.contrib.routable_page.models
import wagtail.contrib.table_block.blocks
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.documents.blocks
import wagtail.embeds.blocks
import wagtail.images.blocks
import wagtail.search.index


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('wagtailcore', '0041_group_collection_permissions_verbose_name_plural'),
        ('wagtailimages', '0001_squashed_0021'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogAuthor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_name', models.CharField(default='', max_length=512)),
                ('first_name', models.CharField(default='', max_length=512)),
                ('last_name', models.CharField(default='', max_length=512)),
                ('author_slug', models.CharField(default='', max_length=512)),
            ],
        ),
        migrations.CreateModel(
            name='BlogIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.core.fields.StreamField([('home', wagtail.core.blocks.StructBlock([('url', wagtail.core.blocks.URLBlock(required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('title', wagtail.core.blocks.CharBlock()), ('description', wagtail.core.blocks.RichTextBlock())], icon='grip', label='Homepage Block')), ('h2', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('h3', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('h4', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('h5', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('intro', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), ('paragraph', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), ('pullquote', wagtail.core.blocks.StructBlock([('quote', wagtail.core.blocks.TextBlock('quote title')), ('attribution', wagtail.core.blocks.CharBlock()), ('affiliation', wagtail.core.blocks.CharBlock(required=False)), ('style', language_acts.cms.models.streamfield.PullQuoteStyleChoiceBlock())], icon='openquote')), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.core.blocks.RichTextBlock(required=False)), ('alignment', language_acts.cms.models.streamfield.ImageFormatChoiceBlock()), ('text', wagtail.core.blocks.RichTextBlock(required=False))], icon='image', label='Aligned image + text')), ('grid', wagtail.core.blocks.StructBlock([('image_block', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('link', wagtail.core.blocks.URLBlock(required=False)), ('text', wagtail.core.blocks.CharBlock(required=False))]), required=False))], icon='grip', label='Image grid')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full-inverse')), ('link', wagtail.core.blocks.StructBlock([('url', wagtail.core.blocks.URLBlock(required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('label', wagtail.core.blocks.CharBlock()), ('style', language_acts.cms.models.streamfield.LinkStyleChoiceBlock())], icon='link')), ('embed', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('html', wagtail.core.blocks.StructBlock([('html', wagtail.core.blocks.RawHTMLBlock()), ('alignment', language_acts.cms.models.streamfield.HTMLAlignmentChoiceBlock())], icon='code', label='Raw HTML')), ('d3', wagtail.core.blocks.StructBlock([('html', wagtail.core.blocks.RawHTMLBlock(required=False)), ('css', wagtail.core.blocks.RawHTMLBlock(required=False)), ('js', wagtail.core.blocks.RawHTMLBlock(required=False)), ('additional_files', wagtail.core.blocks.RawHTMLBlock(required=False, verbose_name='Additional JS                                    files to load.'))], icon='media', label='D3 Visualisation')), ('table', wagtail.contrib.table_block.blocks.TableBlock())])),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtail.contrib.routable_page.models.RoutablePageMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.core.fields.StreamField([('home', wagtail.core.blocks.StructBlock([('url', wagtail.core.blocks.URLBlock(required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('title', wagtail.core.blocks.CharBlock()), ('description', wagtail.core.blocks.RichTextBlock())], icon='grip', label='Homepage Block')), ('h2', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('h3', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('h4', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('h5', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('intro', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), ('paragraph', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), ('pullquote', wagtail.core.blocks.StructBlock([('quote', wagtail.core.blocks.TextBlock('quote title')), ('attribution', wagtail.core.blocks.CharBlock()), ('affiliation', wagtail.core.blocks.CharBlock(required=False)), ('style', language_acts.cms.models.streamfield.PullQuoteStyleChoiceBlock())], icon='openquote')), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.core.blocks.RichTextBlock(required=False)), ('alignment', language_acts.cms.models.streamfield.ImageFormatChoiceBlock()), ('text', wagtail.core.blocks.RichTextBlock(required=False))], icon='image', label='Aligned image + text')), ('grid', wagtail.core.blocks.StructBlock([('image_block', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('link', wagtail.core.blocks.URLBlock(required=False)), ('text', wagtail.core.blocks.CharBlock(required=False))]), required=False))], icon='grip', label='Image grid')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full-inverse')), ('link', wagtail.core.blocks.StructBlock([('url', wagtail.core.blocks.URLBlock(required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('label', wagtail.core.blocks.CharBlock()), ('style', language_acts.cms.models.streamfield.LinkStyleChoiceBlock())], icon='link')), ('embed', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('html', wagtail.core.blocks.StructBlock([('html', wagtail.core.blocks.RawHTMLBlock()), ('alignment', language_acts.cms.models.streamfield.HTMLAlignmentChoiceBlock())], icon='code', label='Raw HTML')), ('d3', wagtail.core.blocks.StructBlock([('html', wagtail.core.blocks.RawHTMLBlock(required=False)), ('css', wagtail.core.blocks.RawHTMLBlock(required=False)), ('js', wagtail.core.blocks.RawHTMLBlock(required=False)), ('additional_files', wagtail.core.blocks.RawHTMLBlock(required=False, verbose_name='Additional JS                                    files to load.'))], icon='media', label='D3 Visualisation')), ('table', wagtail.contrib.table_block.blocks.TableBlock())])),
                ('date', models.DateField()),
                ('guest', models.BooleanField(default=False, help_text='Create new guest author in snippets', verbose_name='Guest Post')),
                ('author', models.ForeignKey(blank=True, help_text='select guest author or leave blank for default user', null=True, on_delete=django.db.models.deletion.SET_NULL, to='cms.BlogAuthor', verbose_name='Author')),
                ('feed_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.core.fields.StreamField([('home', wagtail.core.blocks.StructBlock([('url', wagtail.core.blocks.URLBlock(required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('title', wagtail.core.blocks.CharBlock()), ('description', wagtail.core.blocks.RichTextBlock())], icon='grip', label='Homepage Block')), ('h2', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('h3', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('h4', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('h5', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('intro', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), ('paragraph', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), ('pullquote', wagtail.core.blocks.StructBlock([('quote', wagtail.core.blocks.TextBlock('quote title')), ('attribution', wagtail.core.blocks.CharBlock()), ('affiliation', wagtail.core.blocks.CharBlock(required=False)), ('style', language_acts.cms.models.streamfield.PullQuoteStyleChoiceBlock())], icon='openquote')), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.core.blocks.RichTextBlock(required=False)), ('alignment', language_acts.cms.models.streamfield.ImageFormatChoiceBlock()), ('text', wagtail.core.blocks.RichTextBlock(required=False))], icon='image', label='Aligned image + text')), ('grid', wagtail.core.blocks.StructBlock([('image_block', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('link', wagtail.core.blocks.URLBlock(required=False)), ('text', wagtail.core.blocks.CharBlock(required=False))]), required=False))], icon='grip', label='Image grid')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full-inverse')), ('link', wagtail.core.blocks.StructBlock([('url', wagtail.core.blocks.URLBlock(required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('label', wagtail.core.blocks.CharBlock()), ('style', language_acts.cms.models.streamfield.LinkStyleChoiceBlock())], icon='link')), ('embed', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('html', wagtail.core.blocks.StructBlock([('html', wagtail.core.blocks.RawHTMLBlock()), ('alignment', language_acts.cms.models.streamfield.HTMLAlignmentChoiceBlock())], icon='code', label='Raw HTML')), ('d3', wagtail.core.blocks.StructBlock([('html', wagtail.core.blocks.RawHTMLBlock(required=False)), ('css', wagtail.core.blocks.RawHTMLBlock(required=False)), ('js', wagtail.core.blocks.RawHTMLBlock(required=False)), ('additional_files', wagtail.core.blocks.RawHTMLBlock(required=False, verbose_name='Additional JS                                    files to load.'))], icon='media', label='D3 Visualisation')), ('table', wagtail.contrib.table_block.blocks.TableBlock())])),
                ('date_from', models.DateField(verbose_name='Start Date')),
                ('date_to', models.DateField(blank=True, null=True, verbose_name='End Date (Leave blank if                               not required)')),
                ('time', models.TimeField(verbose_name='Time of Event')),
                ('time_end', models.TimeField(blank=True, null=True, verbose_name='End Time (leave blank if                                not required)')),
                ('location', models.TextField(verbose_name='Location')),
                ('feed_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='EventIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.core.fields.StreamField([('home', wagtail.core.blocks.StructBlock([('url', wagtail.core.blocks.URLBlock(required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('title', wagtail.core.blocks.CharBlock()), ('description', wagtail.core.blocks.RichTextBlock())], icon='grip', label='Homepage Block')), ('h2', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('h3', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('h4', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('h5', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('intro', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), ('paragraph', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), ('pullquote', wagtail.core.blocks.StructBlock([('quote', wagtail.core.blocks.TextBlock('quote title')), ('attribution', wagtail.core.blocks.CharBlock()), ('affiliation', wagtail.core.blocks.CharBlock(required=False)), ('style', language_acts.cms.models.streamfield.PullQuoteStyleChoiceBlock())], icon='openquote')), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.core.blocks.RichTextBlock(required=False)), ('alignment', language_acts.cms.models.streamfield.ImageFormatChoiceBlock()), ('text', wagtail.core.blocks.RichTextBlock(required=False))], icon='image', label='Aligned image + text')), ('grid', wagtail.core.blocks.StructBlock([('image_block', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('link', wagtail.core.blocks.URLBlock(required=False)), ('text', wagtail.core.blocks.CharBlock(required=False))]), required=False))], icon='grip', label='Image grid')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full-inverse')), ('link', wagtail.core.blocks.StructBlock([('url', wagtail.core.blocks.URLBlock(required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('label', wagtail.core.blocks.CharBlock()), ('style', language_acts.cms.models.streamfield.LinkStyleChoiceBlock())], icon='link')), ('embed', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('html', wagtail.core.blocks.StructBlock([('html', wagtail.core.blocks.RawHTMLBlock()), ('alignment', language_acts.cms.models.streamfield.HTMLAlignmentChoiceBlock())], icon='code', label='Raw HTML')), ('d3', wagtail.core.blocks.StructBlock([('html', wagtail.core.blocks.RawHTMLBlock(required=False)), ('css', wagtail.core.blocks.RawHTMLBlock(required=False)), ('js', wagtail.core.blocks.RawHTMLBlock(required=False)), ('additional_files', wagtail.core.blocks.RawHTMLBlock(required=False, verbose_name='Additional JS                                    files to load.'))], icon='media', label='D3 Visualisation')), ('table', wagtail.contrib.table_block.blocks.TableBlock())])),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtail.contrib.routable_page.models.RoutablePageMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.core.fields.StreamField([('home', wagtail.core.blocks.StructBlock([('url', wagtail.core.blocks.URLBlock(required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('title', wagtail.core.blocks.CharBlock()), ('description', wagtail.core.blocks.RichTextBlock())], icon='grip', label='Homepage Block')), ('h2', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('h3', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('h4', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('h5', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('intro', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), ('paragraph', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), ('pullquote', wagtail.core.blocks.StructBlock([('quote', wagtail.core.blocks.TextBlock('quote title')), ('attribution', wagtail.core.blocks.CharBlock()), ('affiliation', wagtail.core.blocks.CharBlock(required=False)), ('style', language_acts.cms.models.streamfield.PullQuoteStyleChoiceBlock())], icon='openquote')), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.core.blocks.RichTextBlock(required=False)), ('alignment', language_acts.cms.models.streamfield.ImageFormatChoiceBlock()), ('text', wagtail.core.blocks.RichTextBlock(required=False))], icon='image', label='Aligned image + text')), ('grid', wagtail.core.blocks.StructBlock([('image_block', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('link', wagtail.core.blocks.URLBlock(required=False)), ('text', wagtail.core.blocks.CharBlock(required=False))]), required=False))], icon='grip', label='Image grid')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full-inverse')), ('link', wagtail.core.blocks.StructBlock([('url', wagtail.core.blocks.URLBlock(required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('label', wagtail.core.blocks.CharBlock()), ('style', language_acts.cms.models.streamfield.LinkStyleChoiceBlock())], icon='link')), ('embed', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('html', wagtail.core.blocks.StructBlock([('html', wagtail.core.blocks.RawHTMLBlock()), ('alignment', language_acts.cms.models.streamfield.HTMLAlignmentChoiceBlock())], icon='code', label='Raw HTML')), ('d3', wagtail.core.blocks.StructBlock([('html', wagtail.core.blocks.RawHTMLBlock(required=False)), ('css', wagtail.core.blocks.RawHTMLBlock(required=False)), ('js', wagtail.core.blocks.RawHTMLBlock(required=False)), ('additional_files', wagtail.core.blocks.RawHTMLBlock(required=False, verbose_name='Additional JS                                    files to load.'))], icon='media', label='D3 Visualisation')), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('carousel', wagtail.core.blocks.StreamBlock([('slides', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(required=True)), ('description', wagtail.core.blocks.CharBlock(required=False)), ('url', wagtail.core.blocks.URLBlock(required=False)), ('page', wagtail.core.blocks.PageChooserBlock(help_text='Overrides url', required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('caption', wagtail.core.blocks.CharBlock(label='Image caption', required=False))], icon='image', label='Slide')), ('blog_slide', wagtail.core.blocks.StructBlock([('page', wagtail.core.blocks.PageChooserBlock(page_type=['cms.BlogPost'], required=False)), ('caption', wagtail.core.blocks.CharBlock(required=False))], icon='edit', label='Blog slide')), ('latest_news', language_acts.cms.models.pages.LatestNewsSlideBlock()), ('latest_post', language_acts.cms.models.pages.LatestBlogSlideBlock()), ('next_event', language_acts.cms.models.pages.UpcomingEventSlideBlock()), ('event_slide', wagtail.core.blocks.StructBlock([('page', wagtail.core.blocks.PageChooserBlock(page_type=['cms.Event'], required=True)), ('caption', wagtail.core.blocks.CharBlock(required=False))], icon='date', label='Event slide'))]))])),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='LemmaLanguage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('orderno', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Lemma Language',
                'verbose_name_plural': 'Lemma Languages',
                'ordering': ['orderno'],
            },
            bases=(wagtail.search.index.Indexed, models.Model),
        ),
        migrations.CreateModel(
            name='NewsIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.core.fields.StreamField([('home', wagtail.core.blocks.StructBlock([('url', wagtail.core.blocks.URLBlock(required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('title', wagtail.core.blocks.CharBlock()), ('description', wagtail.core.blocks.RichTextBlock())], icon='grip', label='Homepage Block')), ('h2', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('h3', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('h4', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('h5', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('intro', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), ('paragraph', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), ('pullquote', wagtail.core.blocks.StructBlock([('quote', wagtail.core.blocks.TextBlock('quote title')), ('attribution', wagtail.core.blocks.CharBlock()), ('affiliation', wagtail.core.blocks.CharBlock(required=False)), ('style', language_acts.cms.models.streamfield.PullQuoteStyleChoiceBlock())], icon='openquote')), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.core.blocks.RichTextBlock(required=False)), ('alignment', language_acts.cms.models.streamfield.ImageFormatChoiceBlock()), ('text', wagtail.core.blocks.RichTextBlock(required=False))], icon='image', label='Aligned image + text')), ('grid', wagtail.core.blocks.StructBlock([('image_block', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('link', wagtail.core.blocks.URLBlock(required=False)), ('text', wagtail.core.blocks.CharBlock(required=False))]), required=False))], icon='grip', label='Image grid')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full-inverse')), ('link', wagtail.core.blocks.StructBlock([('url', wagtail.core.blocks.URLBlock(required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('label', wagtail.core.blocks.CharBlock()), ('style', language_acts.cms.models.streamfield.LinkStyleChoiceBlock())], icon='link')), ('embed', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('html', wagtail.core.blocks.StructBlock([('html', wagtail.core.blocks.RawHTMLBlock()), ('alignment', language_acts.cms.models.streamfield.HTMLAlignmentChoiceBlock())], icon='code', label='Raw HTML')), ('d3', wagtail.core.blocks.StructBlock([('html', wagtail.core.blocks.RawHTMLBlock(required=False)), ('css', wagtail.core.blocks.RawHTMLBlock(required=False)), ('js', wagtail.core.blocks.RawHTMLBlock(required=False)), ('additional_files', wagtail.core.blocks.RawHTMLBlock(required=False, verbose_name='Additional JS                                    files to load.'))], icon='media', label='D3 Visualisation')), ('table', wagtail.contrib.table_block.blocks.TableBlock())])),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtail.contrib.routable_page.models.RoutablePageMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='NewsPost',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.core.fields.StreamField([('home', wagtail.core.blocks.StructBlock([('url', wagtail.core.blocks.URLBlock(required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('title', wagtail.core.blocks.CharBlock()), ('description', wagtail.core.blocks.RichTextBlock())], icon='grip', label='Homepage Block')), ('h2', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('h3', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('h4', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('h5', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('intro', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), ('paragraph', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), ('pullquote', wagtail.core.blocks.StructBlock([('quote', wagtail.core.blocks.TextBlock('quote title')), ('attribution', wagtail.core.blocks.CharBlock()), ('affiliation', wagtail.core.blocks.CharBlock(required=False)), ('style', language_acts.cms.models.streamfield.PullQuoteStyleChoiceBlock())], icon='openquote')), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.core.blocks.RichTextBlock(required=False)), ('alignment', language_acts.cms.models.streamfield.ImageFormatChoiceBlock()), ('text', wagtail.core.blocks.RichTextBlock(required=False))], icon='image', label='Aligned image + text')), ('grid', wagtail.core.blocks.StructBlock([('image_block', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('link', wagtail.core.blocks.URLBlock(required=False)), ('text', wagtail.core.blocks.CharBlock(required=False))]), required=False))], icon='grip', label='Image grid')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full-inverse')), ('link', wagtail.core.blocks.StructBlock([('url', wagtail.core.blocks.URLBlock(required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('label', wagtail.core.blocks.CharBlock()), ('style', language_acts.cms.models.streamfield.LinkStyleChoiceBlock())], icon='link')), ('embed', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('html', wagtail.core.blocks.StructBlock([('html', wagtail.core.blocks.RawHTMLBlock()), ('alignment', language_acts.cms.models.streamfield.HTMLAlignmentChoiceBlock())], icon='code', label='Raw HTML')), ('d3', wagtail.core.blocks.StructBlock([('html', wagtail.core.blocks.RawHTMLBlock(required=False)), ('css', wagtail.core.blocks.RawHTMLBlock(required=False)), ('js', wagtail.core.blocks.RawHTMLBlock(required=False)), ('additional_files', wagtail.core.blocks.RawHTMLBlock(required=False, verbose_name='Additional JS                                    files to load.'))], icon='media', label='D3 Visualisation')), ('table', wagtail.contrib.table_block.blocks.TableBlock())])),
                ('date', models.DateField()),
                ('feed_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='OwriIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.core.fields.StreamField([('home', wagtail.core.blocks.StructBlock([('url', wagtail.core.blocks.URLBlock(required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('title', wagtail.core.blocks.CharBlock()), ('description', wagtail.core.blocks.RichTextBlock())], icon='grip', label='Homepage Block')), ('h2', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('h3', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('h4', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('h5', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('intro', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), ('paragraph', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), ('pullquote', wagtail.core.blocks.StructBlock([('quote', wagtail.core.blocks.TextBlock('quote title')), ('attribution', wagtail.core.blocks.CharBlock()), ('affiliation', wagtail.core.blocks.CharBlock(required=False)), ('style', language_acts.cms.models.streamfield.PullQuoteStyleChoiceBlock())], icon='openquote')), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.core.blocks.RichTextBlock(required=False)), ('alignment', language_acts.cms.models.streamfield.ImageFormatChoiceBlock()), ('text', wagtail.core.blocks.RichTextBlock(required=False))], icon='image', label='Aligned image + text')), ('grid', wagtail.core.blocks.StructBlock([('image_block', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('link', wagtail.core.blocks.URLBlock(required=False)), ('text', wagtail.core.blocks.CharBlock(required=False))]), required=False))], icon='grip', label='Image grid')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full-inverse')), ('link', wagtail.core.blocks.StructBlock([('url', wagtail.core.blocks.URLBlock(required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('label', wagtail.core.blocks.CharBlock()), ('style', language_acts.cms.models.streamfield.LinkStyleChoiceBlock())], icon='link')), ('embed', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('html', wagtail.core.blocks.StructBlock([('html', wagtail.core.blocks.RawHTMLBlock()), ('alignment', language_acts.cms.models.streamfield.HTMLAlignmentChoiceBlock())], icon='code', label='Raw HTML')), ('d3', wagtail.core.blocks.StructBlock([('html', wagtail.core.blocks.RawHTMLBlock(required=False)), ('css', wagtail.core.blocks.RawHTMLBlock(required=False)), ('js', wagtail.core.blocks.RawHTMLBlock(required=False)), ('additional_files', wagtail.core.blocks.RawHTMLBlock(required=False, verbose_name='Additional JS                                    files to load.'))], icon='media', label='D3 Visualisation')), ('table', wagtail.contrib.table_block.blocks.TableBlock())])),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='OwriRichTextPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.core.fields.StreamField([('home', wagtail.core.blocks.StructBlock([('url', wagtail.core.blocks.URLBlock(required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('title', wagtail.core.blocks.CharBlock()), ('description', wagtail.core.blocks.RichTextBlock())], icon='grip', label='Homepage Block')), ('h2', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('h3', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('h4', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('h5', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('intro', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), ('paragraph', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), ('pullquote', wagtail.core.blocks.StructBlock([('quote', wagtail.core.blocks.TextBlock('quote title')), ('attribution', wagtail.core.blocks.CharBlock()), ('affiliation', wagtail.core.blocks.CharBlock(required=False)), ('style', language_acts.cms.models.streamfield.PullQuoteStyleChoiceBlock())], icon='openquote')), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.core.blocks.RichTextBlock(required=False)), ('alignment', language_acts.cms.models.streamfield.ImageFormatChoiceBlock()), ('text', wagtail.core.blocks.RichTextBlock(required=False))], icon='image', label='Aligned image + text')), ('grid', wagtail.core.blocks.StructBlock([('image_block', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('link', wagtail.core.blocks.URLBlock(required=False)), ('text', wagtail.core.blocks.CharBlock(required=False))]), required=False))], icon='grip', label='Image grid')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full-inverse')), ('link', wagtail.core.blocks.StructBlock([('url', wagtail.core.blocks.URLBlock(required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('label', wagtail.core.blocks.CharBlock()), ('style', language_acts.cms.models.streamfield.LinkStyleChoiceBlock())], icon='link')), ('embed', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('html', wagtail.core.blocks.StructBlock([('html', wagtail.core.blocks.RawHTMLBlock()), ('alignment', language_acts.cms.models.streamfield.HTMLAlignmentChoiceBlock())], icon='code', label='Raw HTML')), ('d3', wagtail.core.blocks.StructBlock([('html', wagtail.core.blocks.RawHTMLBlock(required=False)), ('css', wagtail.core.blocks.RawHTMLBlock(required=False)), ('js', wagtail.core.blocks.RawHTMLBlock(required=False)), ('additional_files', wagtail.core.blocks.RawHTMLBlock(required=False, verbose_name='Additional JS                                    files to load.'))], icon='media', label='D3 Visualisation')), ('table', wagtail.contrib.table_block.blocks.TableBlock())])),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='PastEventIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('body', wagtail.core.fields.StreamField([('home', wagtail.core.blocks.StructBlock([('url', wagtail.core.blocks.URLBlock(required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('title', wagtail.core.blocks.CharBlock()), ('description', wagtail.core.blocks.RichTextBlock())], icon='grip', label='Homepage Block')), ('h2', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('h3', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('h4', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('h5', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('intro', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), ('paragraph', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), ('pullquote', wagtail.core.blocks.StructBlock([('quote', wagtail.core.blocks.TextBlock('quote title')), ('attribution', wagtail.core.blocks.CharBlock()), ('affiliation', wagtail.core.blocks.CharBlock(required=False)), ('style', language_acts.cms.models.streamfield.PullQuoteStyleChoiceBlock())], icon='openquote')), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.core.blocks.RichTextBlock(required=False)), ('alignment', language_acts.cms.models.streamfield.ImageFormatChoiceBlock()), ('text', wagtail.core.blocks.RichTextBlock(required=False))], icon='image', label='Aligned image + text')), ('grid', wagtail.core.blocks.StructBlock([('image_block', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('link', wagtail.core.blocks.URLBlock(required=False)), ('text', wagtail.core.blocks.CharBlock(required=False))]), required=False))], icon='grip', label='Image grid')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full-inverse')), ('link', wagtail.core.blocks.StructBlock([('url', wagtail.core.blocks.URLBlock(required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('label', wagtail.core.blocks.CharBlock()), ('style', language_acts.cms.models.streamfield.LinkStyleChoiceBlock())], icon='link')), ('embed', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('html', wagtail.core.blocks.StructBlock([('html', wagtail.core.blocks.RawHTMLBlock()), ('alignment', language_acts.cms.models.streamfield.HTMLAlignmentChoiceBlock())], icon='code', label='Raw HTML')), ('d3', wagtail.core.blocks.StructBlock([('html', wagtail.core.blocks.RawHTMLBlock(required=False)), ('css', wagtail.core.blocks.RawHTMLBlock(required=False)), ('js', wagtail.core.blocks.RawHTMLBlock(required=False)), ('additional_files', wagtail.core.blocks.RawHTMLBlock(required=False, verbose_name='Additional JS                                    files to load.'))], icon='media', label='D3 Visualisation')), ('table', wagtail.contrib.table_block.blocks.TableBlock())])),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtail.contrib.routable_page.models.RoutablePageMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='POSLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
            ],
            options={
                'verbose_name': 'Eagle POS Label',
                'verbose_name_plural': 'Eagle POS Labels',
            },
            bases=(wagtail.search.index.Indexed, models.Model),
        ),
        migrations.CreateModel(
            name='RecordIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='TagResults',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtail.contrib.routable_page.models.RoutablePageMixin, 'wagtailcore.page'),
        ),
        migrations.CreateModel(
            name='StrandPage',
            fields=[
                ('owriindexpage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cms.OwriIndexPage')),
                ('blogs_contextual_information', wagtail.core.fields.RichTextField(blank=True, null=True)),
                ('events_contextual_information', wagtail.core.fields.RichTextField(blank=True, null=True)),
                ('news_contextual_information', wagtail.core.fields.RichTextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('cms.owriindexpage', models.Model),
        ),
        migrations.CreateModel(
            name='RecordPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('latin_lemma', wagtail.core.fields.RichTextField(blank=True, null=True)),
                ('latin_meaning', wagtail.core.fields.RichTextField(blank=True, null=True)),
                ('cultural_transmission', wagtail.core.fields.StreamField([('home', wagtail.core.blocks.StructBlock([('url', wagtail.core.blocks.URLBlock(required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('title', wagtail.core.blocks.CharBlock()), ('description', wagtail.core.blocks.RichTextBlock())], icon='grip', label='Homepage Block')), ('h2', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('h3', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('h4', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('h5', wagtail.core.blocks.CharBlock(classname='title', icon='title')), ('intro', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), ('paragraph', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), ('pullquote', wagtail.core.blocks.StructBlock([('quote', wagtail.core.blocks.TextBlock('quote title')), ('attribution', wagtail.core.blocks.CharBlock()), ('affiliation', wagtail.core.blocks.CharBlock(required=False)), ('style', language_acts.cms.models.streamfield.PullQuoteStyleChoiceBlock())], icon='openquote')), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.core.blocks.RichTextBlock(required=False)), ('alignment', language_acts.cms.models.streamfield.ImageFormatChoiceBlock()), ('text', wagtail.core.blocks.RichTextBlock(required=False))], icon='image', label='Aligned image + text')), ('grid', wagtail.core.blocks.StructBlock([('image_block', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('link', wagtail.core.blocks.URLBlock(required=False)), ('text', wagtail.core.blocks.CharBlock(required=False))]), required=False))], icon='grip', label='Image grid')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full-inverse')), ('link', wagtail.core.blocks.StructBlock([('url', wagtail.core.blocks.URLBlock(required=False)), ('page', wagtail.core.blocks.PageChooserBlock(required=False)), ('label', wagtail.core.blocks.CharBlock()), ('style', language_acts.cms.models.streamfield.LinkStyleChoiceBlock())], icon='link')), ('embed', wagtail.embeds.blocks.EmbedBlock(icon='media')), ('html', wagtail.core.blocks.StructBlock([('html', wagtail.core.blocks.RawHTMLBlock()), ('alignment', language_acts.cms.models.streamfield.HTMLAlignmentChoiceBlock())], icon='code', label='Raw HTML')), ('d3', wagtail.core.blocks.StructBlock([('html', wagtail.core.blocks.RawHTMLBlock(required=False)), ('css', wagtail.core.blocks.RawHTMLBlock(required=False)), ('js', wagtail.core.blocks.RawHTMLBlock(required=False)), ('additional_files', wagtail.core.blocks.RawHTMLBlock(required=False, verbose_name='Additional JS                                    files to load.'))], icon='media', label='D3 Visualisation')), ('table', wagtail.contrib.table_block.blocks.TableBlock())])),
                ('latin_pos', modelcluster.fields.ParentalManyToManyField(blank=True, to='cms.POSLabel')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='RecordEntry',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('lemma', models.CharField(blank=True, max_length=2048, null=True)),
                ('variants', wagtail.core.fields.StreamField([('text', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), ('html', wagtail.core.blocks.StructBlock([('html', wagtail.core.blocks.RawHTMLBlock()), ('alignment', language_acts.cms.models.streamfield.HTMLAlignmentChoiceBlock())], icon='code', label='Raw HTML', required=False))], blank=True)),
                ('morph_related_words', wagtail.core.fields.StreamField([('text', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), ('html', wagtail.core.blocks.StructBlock([('html', wagtail.core.blocks.RawHTMLBlock()), ('alignment', language_acts.cms.models.streamfield.HTMLAlignmentChoiceBlock())], icon='code', label='Raw HTML', required=False))], blank=True)),
                ('ranking_freq', wagtail.core.fields.StreamField([('text', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), ('html', wagtail.core.blocks.StructBlock([('html', wagtail.core.blocks.RawHTMLBlock()), ('alignment', language_acts.cms.models.streamfield.HTMLAlignmentChoiceBlock())], icon='code', label='Raw HTML', required=False))], blank=True)),
                ('first_attest', wagtail.core.fields.StreamField([('text', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), ('html', wagtail.core.blocks.StructBlock([('html', wagtail.core.blocks.RawHTMLBlock()), ('alignment', language_acts.cms.models.streamfield.HTMLAlignmentChoiceBlock())], icon='code', label='Raw HTML', required=False))], blank=True)),
                ('hist_freq', wagtail.core.fields.StreamField([('text', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), ('html', wagtail.core.blocks.StructBlock([('html', wagtail.core.blocks.RawHTMLBlock()), ('alignment', language_acts.cms.models.streamfield.HTMLAlignmentChoiceBlock())], icon='code', label='Raw HTML', required=False))], blank=True, verbose_name='Historical frequency')),
                ('semantic_history', wagtail.core.fields.StreamField([('text', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), ('html', wagtail.core.blocks.StructBlock([('html', wagtail.core.blocks.RawHTMLBlock()), ('alignment', language_acts.cms.models.streamfield.HTMLAlignmentChoiceBlock())], icon='code', label='Raw HTML', required=False))], blank=True)),
                ('collocational_history', wagtail.core.fields.StreamField([('text', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), ('html', wagtail.core.blocks.StructBlock([('html', wagtail.core.blocks.RawHTMLBlock()), ('alignment', language_acts.cms.models.streamfield.HTMLAlignmentChoiceBlock())], icon='code', label='Raw HTML', required=False))], blank=True)),
                ('diatopic_variation', wagtail.core.fields.StreamField([('text', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), ('html', wagtail.core.blocks.StructBlock([('html', wagtail.core.blocks.RawHTMLBlock()), ('alignment', language_acts.cms.models.streamfield.HTMLAlignmentChoiceBlock())], icon='code', label='Raw HTML', required=False))], blank=True)),
                ('diaphasic_variation', wagtail.core.fields.StreamField([('text', wagtail.core.blocks.RichTextBlock(icon='pilcrow')), ('html', wagtail.core.blocks.StructBlock([('html', wagtail.core.blocks.RawHTMLBlock()), ('alignment', language_acts.cms.models.streamfield.HTMLAlignmentChoiceBlock())], icon='code', label='Raw HTML', required=False))], blank=True)),
                ('hist_freq_image', models.ForeignKey(blank=True, help_text='Pre-rendered graph will take priority over manual data            inputted above.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='wagtailimages.Image', verbose_name='[OR] Pre-rendered Graph Image')),
                ('language', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='cms.LemmaLanguage')),
                ('pos', modelcluster.fields.ParentalManyToManyField(blank=True, to='cms.POSLabel')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='NewsPostTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='cms.NewsPost')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cms_newsposttag_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='newspost',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='cms.NewsPostTag', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.CreateModel(
            name='EventTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='cms.Event')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cms_eventtag_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='event',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='cms.EventTag', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.CreateModel(
            name='BlogPostTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='cms.BlogPost')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cms_blogposttag_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='blogpost',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='cms.BlogPostTag', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='owriindexpage',
            name='strands',
            field=modelcluster.fields.ParentalManyToManyField(blank=True, to='cms.StrandPage'),
        ),
        migrations.AddField(
            model_name='newspost',
            name='strands',
            field=modelcluster.fields.ParentalManyToManyField(blank=True, to='cms.StrandPage'),
        ),
        migrations.AddField(
            model_name='event',
            name='strands',
            field=modelcluster.fields.ParentalManyToManyField(blank=True, to='cms.StrandPage'),
        ),
        migrations.AddField(
            model_name='blogpost',
            name='strands',
            field=modelcluster.fields.ParentalManyToManyField(blank=True, to='cms.StrandPage'),
        ),
    ]
